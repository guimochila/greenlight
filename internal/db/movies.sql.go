// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: movies.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/guimochila/greenlight/internal/data"
	"github.com/lib/pq"
)

const createMovie = `-- name: CreateMovie :one
INSERT INTO movies (title, year, runtime, genres)
VALUES ($1, $2, $3, $4)
RETURNING id, created_at, version
`

type CreateMovieParams struct {
	Title   string       `db:"title"`
	Year    int32        `db:"year"`
	Runtime data.Runtime `db:"runtime"`
	Genres  []string     `db:"genres"`
}

type CreateMovieRow struct {
	ID        uuid.UUID `db:"id"`
	CreatedAt time.Time `db:"created_at"`
	Version   int32     `db:"version"`
}

func (q *Queries) CreateMovie(ctx context.Context, arg CreateMovieParams) (CreateMovieRow, error) {
	row := q.queryRow(ctx, q.createMovieStmt, createMovie,
		arg.Title,
		arg.Year,
		arg.Runtime,
		pq.Array(arg.Genres),
	)
	var i CreateMovieRow
	err := row.Scan(&i.ID, &i.CreatedAt, &i.Version)
	return i, err
}
